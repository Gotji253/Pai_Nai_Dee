# .github/workflows/ci.yml
name: Monorepo CI

on:
  pull_request:
    branches: [main] # Triggers on PRs targeting the main branch
  workflow_dispatch: # Allows manual triggering

jobs:
  frontend-ci:
    name: Frontend CI (tourist-app)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tourist-app

    strategy:
      matrix:
        node-version: [20.x] # Using a recent LTS version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: tourist-app/package-lock.json

      - name: Install dependencies
        run: npm ci # Use ci for cleaner installs

      - name: Run linters
        run: npm run lint

      - name: Run tests
        run: npm test -- --watchAll=false # Ensure non-interactive mode

      - name: Build application
        run: npm run build

      - name: Show status message - Frontend
        run: echo "Frontend CI checks completed successfully."

  backend-ci:
    name: Backend CI (wanderlust_guide)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wanderlust_guide

    strategy:
      matrix:
        python-version: ['3.10'] # Specify Python version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('wanderlust_guide/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (pytest)
        run: pytest

      - name: Show status message - Backend
        run: echo "Backend CI checks completed successfully."
